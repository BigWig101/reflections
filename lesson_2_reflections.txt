What happens when you initialize a repository? Why do you need to do it? - when you initialise a git repo, it creates a new .git file which contains no initial commit. We need to write in the first commit ourself. It works that way because we might have files which we dont want to keep track of. Thus by running 'git status' we can see no of commits, unracked files etc.

How is the staging area different from the working directory and the repository? What value do you think it offers? - The working directory helps us to include all the logical files into one commit in Working directory by meanss of an intermediate section designated as staging area. Such an area helps us to collect all the files which are to be included in a single commit.

How can you use the staging area to make sure you have one commit per logical change? - The staging area could be used to include all of our current changes and pack it all into one commit per logic once done.

What are some situations when branches would be helpful in keeping your history organized? How would branches help? - Branches are helpful when we would want to create an experimental function without breaking the base repo. Once the exp is working fine we could merge it into the master branch.